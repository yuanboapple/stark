{"remainingRequest":"/Users/yuanbo/Desktop/与燕/222/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/yuanbo/Desktop/与燕/222/src/main.js","dependencies":[{"path":"/Users/yuanbo/Desktop/与燕/222/src/main.js","mtime":1560503207534},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"/Users/yuanbo/Desktop/\\u4E0E\\u71D5/222/node_modules/_core-js@2.6.9@core-js/modules/es6.array.iterator.js\";\nimport \"/Users/yuanbo/Desktop/\\u4E0E\\u71D5/222/node_modules/_core-js@2.6.9@core-js/modules/es6.promise.js\";\nimport \"/Users/yuanbo/Desktop/\\u4E0E\\u71D5/222/node_modules/_core-js@2.6.9@core-js/modules/es6.object.assign.js\";\nimport \"/Users/yuanbo/Desktop/\\u4E0E\\u71D5/222/node_modules/_core-js@2.6.9@core-js/modules/es7.promise.finally.js\";\nimport Vue from 'vue';\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport \"./plugins/element.js\";\nimport \"./assets/style/common.less\";\nimport 'font-awesome/css/font-awesome.css';\nVue.config.productionTip = false;\nVue.config.devtools = true; //引用公用js\n\nimport commonJS from \"./plugins/common.js\";\nVue.prototype.common = commonJS; //引用网络工具js\n\nimport { http } from \"./plugins/http.js\";\nVue.prototype.http = http; // 全局引入axios 并配置\n\nimport axios from 'axios';\nimport qs from 'qs';\nVue.prototype.$qs = qs; //引入js-md5\n\nimport md5 from 'js-md5';\nwindow.md5Js = md5;\nVue.prototype.md5 = md5; // 引入echarts\n\nimport echarts from 'echarts';\nVue.prototype.echarts = echarts; //引入markdown编辑器\n\nimport mavonEditor from 'mavon-editor';\nimport 'mavon-editor/dist/css/index.css';\nVue.use(mavonEditor);\naxios.defaults.baseURL = commonJS.basePath;\naxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest';\nVue.prototype.axios = axios;\n/******************axios拦截器****************/\n//request 拦截 在非登录或文章相关接口调用时 获取session中的认证数据\n// Vue.prototype.axios.interceptors.request.use(\n//   (config, Vue) => {\n//     if(config.data) {\n//       config.data.token = sessionStorage.getItem(\"token\") || null\n//     }\n//     if(config.params) {\n//       config.params.token = sessionStorage.getItem(\"token\") || null\n//     }\n//     return config\n//   }, \n//   error => {\n//     return Promise.reject(error)\n//   }\n// )\n//response 拦截\n\nVue.prototype.axios.interceptors.response.use(function (response, Vue) {\n  //请求成功的拦截\n  if (response.hasOwnProperty('data')) {\n    if (response.data.code == 200) {\n      return response.data;\n    } else {\n      return Promise.reject(response.data);\n    }\n  } else {\n    if (response.code == 200) {\n      return response;\n    } else {\n      return Promise.reject(response);\n    }\n  }\n  /*if (response.config.responseType != \"blob\") {  //非文件类型不进行处理\r\n    if (response.data.meta.code == \"401\") {\r\n      // 抛出未登录异常, 并定时跳转至登录页\r\n      setTimeout(() => {\r\n        window.location.href = window.location.origin + \"/web/login\"\r\n      }, 1500)\r\n      return Promise.reject(\"未登陆或登陆信息失效!\")\r\n    } else if (response.data.meta.code != 0) {\r\n      // 抛出请求失的异常\r\n      return Promise.reject(response.data.meta.message)\r\n    } else {\r\n      // 无异常直接返回\r\n      return response\r\n    }\r\n  } else { //文件类型直接返回\r\n    return response\r\n  }*/\n  // 当meta信息为空时，表示后台回传的文件流\n  // if(!response.data.meta) return response;\n  // if (response.data.meta.code != 0) { \n  //   if(response.data.meta.code == 401 || response.data.meta.code == 405) {\n  //     setTimeout(() => {\n  //       window.location.href = window.location.origin + \"/web/login\"\n  //     }, 1500)\n  //     return Promise.reject(\"登录验证失效, 请重新登录\");\n  //   } else if (response.data.meta.code == 403) {\n  //     setTimeout(() => {\n  //       window.location.href = window.location.origin + \"/web/login\"\n  //     }, 2000)\n  //     return Promise.reject(\"您的权限已被修改, 请重新登录\");\n  //   } else {\n  //     return Promise.reject(response.data.meta.message)\n  //   }\n  // } else {\n  //   return response\n  // }\n\n}, function (error) {// if (error.response.data.msg) {\n  //   return Promise.reject(error.data.msg)\n  // } else { //请求没有返回体, 请求失败\n  //   return Promise.reject(\"网络错误, 请联系管理员\");\n  // }\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(createElement) {\n    var routeMeta = this.$route.meta;\n    var props = {}; // 控制是否显示 带导航的布局 || 空白布局\n\n    if (routeMeta && routeMeta.showNav) {\n      props.layout = 'nav-layout';\n    } else {\n      props.layout = 'blank-layout';\n    }\n\n    return createElement(App, {\n      props: props\n    });\n  }\n}).$mount('#app');",{"version":3,"sources":["/Users/yuanbo/Desktop/与燕/222/src/main.js"],"names":["Vue","App","router","store","config","productionTip","devtools","commonJS","prototype","common","http","axios","qs","$qs","md5","window","md5Js","echarts","mavonEditor","use","defaults","baseURL","basePath","headers","interceptors","response","hasOwnProperty","data","code","Promise","reject","error","render","createElement","routeMeta","$route","meta","props","showNav","layout","$mount"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport './plugins/element.js'\r\n\r\nimport './assets/style/common.less'\r\nimport 'font-awesome/css/font-awesome.css'\r\n\r\nVue.config.productionTip = false\r\nVue.config.devtools = true\r\n//引用公用js\r\nimport commonJS from \"./plugins/common.js\"\r\nVue.prototype.common = commonJS;\r\n//引用网络工具js\r\nimport {http} from \"./plugins/http.js\"\r\nVue.prototype.http = http;\r\n// 全局引入axios 并配置\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nVue.prototype.$qs = qs\r\n//引入js-md5\r\nimport md5 from 'js-md5';\r\nwindow.md5Js = md5\r\nVue.prototype.md5 = md5;\r\n\r\n// 引入echarts\r\nimport echarts from 'echarts' \r\nVue.prototype.echarts = echarts \r\n\r\n//引入markdown编辑器\r\nimport mavonEditor from 'mavon-editor'\r\nimport 'mavon-editor/dist/css/index.css'\r\nVue.use(mavonEditor)\r\naxios.defaults.baseURL = commonJS.basePath\r\naxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest';\r\nVue.prototype.axios = axios;\r\n\r\n/******************axios拦截器****************/\r\n//request 拦截 在非登录或文章相关接口调用时 获取session中的认证数据\r\n// Vue.prototype.axios.interceptors.request.use(\r\n//   (config, Vue) => {\r\n//     if(config.data) {\r\n//       config.data.token = sessionStorage.getItem(\"token\") || null\r\n//     }\r\n//     if(config.params) {\r\n//       config.params.token = sessionStorage.getItem(\"token\") || null\r\n//     }\r\n    \r\n//     return config\r\n//   }, \r\n//   error => {\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n//response 拦截\r\nVue.prototype.axios.interceptors.response.use(\r\n  (response, Vue) => {\r\n    //请求成功的拦截\r\n    if(response.hasOwnProperty('data'))\r\n    {\r\n      if(response.data.code == 200) {\r\n        return response.data\r\n      } else {\r\n        return Promise.reject(response.data)\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(response.code == 200) {\r\n        return response\r\n      } else {\r\n        return Promise.reject(response)\r\n      }\r\n    }\r\n\r\n    /*if (response.config.responseType != \"blob\") {  //非文件类型不进行处理\r\n      if (response.data.meta.code == \"401\") {\r\n        // 抛出未登录异常, 并定时跳转至登录页\r\n        setTimeout(() => {\r\n          window.location.href = window.location.origin + \"/web/login\"\r\n        }, 1500)\r\n        return Promise.reject(\"未登陆或登陆信息失效!\")\r\n      } else if (response.data.meta.code != 0) {\r\n        // 抛出请求失的异常\r\n        return Promise.reject(response.data.meta.message)\r\n      } else {\r\n        // 无异常直接返回\r\n        return response\r\n      }\r\n    } else { //文件类型直接返回\r\n      return response\r\n    }*/\r\n    // 当meta信息为空时，表示后台回传的文件流\r\n    // if(!response.data.meta) return response;\r\n\r\n    // if (response.data.meta.code != 0) { \r\n\r\n    //   if(response.data.meta.code == 401 || response.data.meta.code == 405) {\r\n    //     setTimeout(() => {\r\n    //       window.location.href = window.location.origin + \"/web/login\"\r\n    //     }, 1500)\r\n    //     return Promise.reject(\"登录验证失效, 请重新登录\");\r\n    //   } else if (response.data.meta.code == 403) {\r\n    //     setTimeout(() => {\r\n    //       window.location.href = window.location.origin + \"/web/login\"\r\n    //     }, 2000)\r\n    //     return Promise.reject(\"您的权限已被修改, 请重新登录\");\r\n    //   } else {\r\n    //     return Promise.reject(response.data.meta.message)\r\n    //   }\r\n    // } else {\r\n    //   return response\r\n    // }\r\n  }, \r\n  error => {\r\n    // if (error.response.data.msg) {\r\n\r\n    //   return Promise.reject(error.data.msg)\r\n    // } else { //请求没有返回体, 请求失败\r\n\r\n    //   return Promise.reject(\"网络错误, 请联系管理员\");\r\n    // }\r\n  }\r\n);\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: function (createElement) {\r\n    let routeMeta = this.$route.meta\r\n    let props = {}\r\n    // 控制是否显示 带导航的布局 || 空白布局\r\n    if (routeMeta && routeMeta.showNav) {\r\n      props.layout = 'nav-layout'\r\n    } else {\r\n      props.layout = 'blank-layout'\r\n    }\r\n    return createElement(App, {props})\r\n  }\r\n}).$mount('#app')\r\n"]}]}