{"remainingRequest":"/Users/mac/Desktop/222/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/mac/Desktop/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/mac/Desktop/222/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/222/src/views/settlementManage/settlementManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Desktop/222/src/views/settlementManage/settlementManage.vue","mtime":1561105599000},{"path":"/Users/mac/Desktop/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/222/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/222/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/222/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      orderList: [],\n      total: null,\n      condition: {\n        page: null\n      }\n    };\n  },\n  methods: {\n    /*\n    **获取承兑待结算订单\n    */\n    _getWaitOrderList: function () {\n      var _getWaitOrderList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(condition) {\n        var resData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.http.post('/order/getOrderWaitSettlementLists.api');\n\n              case 2:\n                resData = _context.sent;\n\n                if (resData.code === 200) {\n                  this.orderList = resData.data.data;\n                  this.total = resData.data.total;\n                  this.condition.page = resData.data.current_page;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _getWaitOrderList(_x) {\n        return _getWaitOrderList2.apply(this, arguments);\n      }\n\n      return _getWaitOrderList;\n    }(),\n\n    /*\n    **处理改变页数事件\n    */\n    handleCurrentPage: function () {\n      var _handleCurrentPage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(cur) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.condition.page = cur;\n                _context2.next = 3;\n                return this._getWaitOrderList(this.condition);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleCurrentPage(_x2) {\n        return _handleCurrentPage.apply(this, arguments);\n      }\n\n      return handleCurrentPage;\n    }(),\n\n    /*\n    **结算订单\n    */\n    settlementOrder: function () {\n      var _settlementOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        var _id, resData;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _id = id;\n                _context3.next = 3;\n                return this.http.get('/order/settlementOrder.api', {\n                  id: _id\n                });\n\n              case 3:\n                resData = _context3.sent;\n\n                if (!(resData.code === 200)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                this.$message.success(resData.msg);\n                _context3.next = 8;\n                return this._getWaitOrderList(this.condition);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function settlementOrder(_x3) {\n        return _settlementOrder.apply(this, arguments);\n      }\n\n      return settlementOrder;\n    }(),\n\n    /*\n    **结算多条订单\n    */\n    fullSettlementOrder: function () {\n      var _fullSettlementOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var ids, resData;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.orderList.length) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this.loading = true;\n                ids = [];\n                this.orderList.forEach(function (order) {\n                  ids.push(order.id);\n                });\n                _context4.next = 6;\n                return this.http.get('/order/settlementOrders.api', {\n                  id: ids.join(',')\n                });\n\n              case 6:\n                resData = _context4.sent;\n\n                if (!(resData.code === 200)) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this.loading = false;\n                this.$message.success(resData.msg);\n                _context4.next = 12;\n                return this._getWaitOrderList(this.condition);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fullSettlementOrder() {\n        return _fullSettlementOrder.apply(this, arguments);\n      }\n\n      return fullSettlementOrder;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._getWaitOrderList(this.condition);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["settlementManage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n        <div class=\"contain-head\">\n            <div class=\"head-pre\"></div>\n            <span class=\"head-title\">结算管理</span>\n            <span class=\"head-subtitle\">承兑商户操作员全部进行确认订单后的订单才会进入结算管理列表</span>\n        </div>\n        <el-main v-loading=\"loading\">\n        <div class=\"contain-footer\" >\n             <div class=\"contain-footer-top\">\n               <div class=\"contain-footer-topl\">\n                    <span class=\"jiesuan-title\">系统提示：当日超过晚上20:00没有结算，系统默认自动全部结算</span>                                                                            \n               </div>\n               <div class=\"contain-footer-topr\">\n                 <el-button class=\"sys-Btn\"  @click=\"fullSettlementOrder()\">全部结算</el-button>\n               </div>            \n             </div>\n            <div class=\"contain-footer-bottom\">\n                <el-table\n                    :data=\"orderList\"\n                    border\n                    style=\"width: 100%;\">\n                    <el-table-column align=\"center\"\n                     type=\"index\"\n                     label=\"序号\"\n                     width=\"50\">\n                    </el-table-column>  \n                    <el-table-column\n                      prop=\"orderNum\"\n                      label=\"订单号\"\n                      min-width=\"100\"\n                      align=\"center\">                      \n                    </el-table-column>\n                    <el-table-column\n                      prop=\"username\"\n                      label=\"用户姓名\"\n                      min-width=\"100\"\n                      align=\"center\">                      \n                    </el-table-column>                    \n                    <el-table-column\n                      prop=\"amount\"\n                      label=\"订单金额\"\n                      align=\"center\"\n                      width=\"130\">\n                    </el-table-column>\n                    <el-table-column\n                      prop=\"payTime\"\n                      label=\"支付时间\"\n                      align=\"center\"\n                      width=\"170\">\n                    </el-table-column>                    \n                    <el-table-column\n                      prop=\"orderType\"\n                      label=\"状态\"\n                      align=\"center\"\n                      min-width=\"140\">\n                    </el-table-column>\n                    <el-table-column\n                      label=\"操作\"\n                      align=\"center\"\n                      min-width=\"140\">\n                      <template slot-scope=\"scope\">\n                        <el-button type=\"text\" size=\"mini\" class=\"sys-text-Btn\" @click=\"settlementOrder(scope.row.id)\">结算</el-button>\n                      </template>\n                    </el-table-column> \n                </el-table> \n            <div class=\"footerbottom-bottom\">\n            <div class=\"total-title\" v-show=\"total\">\n            今日待结算&nbsp;<span class=\"total-count\">{{total}}</span>&nbsp;单\n            </div>    \n             <el-pagination\n                class=\"pagination\"\n                background\n                layout=\"prev, pager, next\"\n                :page-size=\"15\"\n                :hide-on-single-page=\"orderList.length<15\"\n                :total=\"total\"\n                :current-page.sync=\"condition.page\"\n                @current-change=\"handleCurrentPage\">\n             </el-pagination>           \n            </div>                                 \n            </div>     \n        </div>           \n        </el-main>  \n            \n  </div>\n</template>\n<script>\n  export default {\n      data() {\n          return {\n              loading: false,\n              orderList: [],\n              total: null,\n              condition: {\n                page: null\n              }\n          }\n      },\n      methods: {\n        /*\n        **获取承兑待结算订单\n        */\n       async _getWaitOrderList(condition){\n         let resData = await this.http.post('/order/getOrderWaitSettlementLists.api')\n         if(resData.code === 200){\n           this.orderList = resData.data.data\n           this.total = resData.data.total\n           this.condition.page = resData.data.current_page\n         }\n       },\n        /*\n        **处理改变页数事件\n        */\n        async handleCurrentPage(cur){\n           this.condition.page = cur\n           await this._getWaitOrderList(this.condition)\n        },\n        /*\n        **结算订单\n        */\n        async settlementOrder(id){\n          let _id = id\n          let resData = await this.http.get('/order/settlementOrder.api', {id: _id})\n          if(resData.code === 200){\n            this.$message.success(resData.msg)\n            await this._getWaitOrderList(this.condition)\n          }\n        },\n        /*\n        **结算多条订单\n        */\n       async fullSettlementOrder(){\n         if(this.orderList.length){\n         this.loading = true\n           let ids = []\n           this.orderList.forEach(order => {\n             ids.push(order.id)\n           });\n           let resData = await this.http.get('/order/settlementOrders.api', {id: ids.join(',')})\n           if(resData.code === 200){\n             this.loading = false\n             this.$message.success(resData.msg)\n             await this._getWaitOrderList(this.condition)\n           }\n         }\n       }\n      },\n      async mounted() {\n        await this._getWaitOrderList(this.condition)\n      },\n  }\n</script>\n<style lang=\"less\" scoped>\n\n.contain-head{\n    .head-subtitle{\n        color: #666666;\n    }\n\n}\n.contain-footer-topl{\n\n    display: flex;\n    width: 45vw;\n    align-items: center;\n    color: #666666;\n    .jiesuan-title{\n        color: #666666;\n        font-size: 0.85rem;\n    }\n}\n</style>\n"],"sourceRoot":"src/views/settlementManage"}]}