{"remainingRequest":"/Users/yuanbo/Desktop/与燕/222/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/yuanbo/Desktop/与燕/222/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuanbo/Desktop/与燕/222/src/App.vue","mtime":1560766616529},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanbo/Desktop/与燕/222/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n  import BlankLayout from \"./layout/BlankLayout.vue\";\n  import NavLayout from \"./layout/NavLayout.vue\"\n  import MyNavLayout from \"./layout/MyNavLayout\"\n  import qrcode from \"qrcode.vue\"\nimport { constants } from 'crypto';\n\n  export default {\n    props: {\n      layout: {\n        type: String,\n        default: \"nav-layout\"\n      }\n    },\n    watch: {\n      \"$route\": {\n        handler (to, from) {\n          //跳转到新页面时, 清空vuex的权限内容, 重新比对\n          // this.$store.commit(\"setAuthority\", null)\n          // if(from.path) {\n          //   sessionStorage.setItem(\"historyName\", from.name)\n          // }\n        },\n        deep: true\n      }\n    },\n    components: {\n      \"qrcode\":       qrcode,\n      \"nav-layout\":   MyNavLayout,                                    \n      \"blank-layout\": BlankLayout\n    },\n\t\tdata() {\n      return {\n\n      };\n    },\n    created() {\n      if(!localStorage.getItem(\"user\")) {\n        this.$store.commit(\"saveUserData\", \"{}\")\n      } else {\n        this.$store.commit(\"saveUserData\", localStorage.getItem(\"user\"))\n      }\n    },\n\t\tmounted() {\n      //页面刷新 查询token 没有则不设置token\n      if(!!sessionStorage.getItem(\"token\")) {\n        this.axios.defaults.headers.common['token'] = sessionStorage.getItem(\"token\")\n      } else {\n        this.axios.defaults.headers.common['token'] = \"\"\n      }\n      if(localStorage.getItem(\"theme\"))\n      {\n        document.getElementById('app').className = localStorage.getItem(\"theme\");\n      }      \n\t\t},\n    methods: {\n      /**\n       * 遍历树(递归遍历), 删除空白的childrens\n       * @param  {object}   node         根节点(单个对象, 多个树需要重复调用)\n       * @return none\n       */\n      traverseTree (node) {\n        if (!node) {\n          return;\n        }\n        if (node.childrens && node.childrens.length > 0) {\n          var i = 0;\n          for (i = 0; i < node.childrens.length; i++) {\n            this.traverseTree(node.childrens[i]);\n            console.log(node.childrens[i])\n          }\n        }\n      },\n    }\n  }\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 根据需要显示不同的布局情况 -->\r\n    <component :is=\"layout\"></component>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import BlankLayout from \"./layout/BlankLayout.vue\";\r\n  import NavLayout from \"./layout/NavLayout.vue\"\r\n  import MyNavLayout from \"./layout/MyNavLayout\"\r\n  import qrcode from \"qrcode.vue\"\r\nimport { constants } from 'crypto';\r\n\r\n  export default {\r\n    props: {\r\n      layout: {\r\n        type: String,\r\n        default: \"nav-layout\"\r\n      }\r\n    },\r\n    watch: {\r\n      \"$route\": {\r\n        handler (to, from) {\r\n          //跳转到新页面时, 清空vuex的权限内容, 重新比对\r\n          // this.$store.commit(\"setAuthority\", null)\r\n          // if(from.path) {\r\n          //   sessionStorage.setItem(\"historyName\", from.name)\r\n          // }\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    components: {\r\n      \"qrcode\":       qrcode,\r\n      \"nav-layout\":   MyNavLayout,                                    \r\n      \"blank-layout\": BlankLayout\r\n    },\r\n\t\tdata() {\r\n      return {\r\n\r\n      };\r\n    },\r\n    created() {\r\n      if(!localStorage.getItem(\"user\")) {\r\n        this.$store.commit(\"saveUserData\", \"{}\")\r\n      } else {\r\n        this.$store.commit(\"saveUserData\", localStorage.getItem(\"user\"))\r\n      }\r\n    },\r\n\t\tmounted() {\r\n      //页面刷新 查询token 没有则不设置token\r\n      if(!!sessionStorage.getItem(\"token\")) {\r\n        this.axios.defaults.headers.common['token'] = sessionStorage.getItem(\"token\")\r\n      } else {\r\n        this.axios.defaults.headers.common['token'] = \"\"\r\n      }\r\n      if(localStorage.getItem(\"theme\"))\r\n      {\r\n        document.getElementById('app').className = localStorage.getItem(\"theme\");\r\n      }      \r\n\t\t},\r\n    methods: {\r\n      /**\r\n       * 遍历树(递归遍历), 删除空白的childrens\r\n       * @param  {object}   node         根节点(单个对象, 多个树需要重复调用)\r\n       * @return none\r\n       */\r\n      traverseTree (node) {\r\n        if (!node) {\r\n          return;\r\n        }\r\n        if (node.childrens && node.childrens.length > 0) {\r\n          var i = 0;\r\n          for (i = 0; i < node.childrens.length; i++) {\r\n            this.traverseTree(node.childrens[i]);\r\n            console.log(node.childrens[i])\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\">\r\n#app\r\n{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n\r\n"]}]}